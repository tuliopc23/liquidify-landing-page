import { FileUpload as t } from "@ark-ui/react";
import { m as p, c as s, s as m, a as n, g as d } from "./create-recipe-D2XybSAv.mjs";
import { c } from "./create-style-context-8AvEXXie.mjs";
const r = {}, g = [], f = [
  ["root", "file-upload__root"],
  ["dropzone", "file-upload__dropzone"],
  ["trigger", "file-upload__trigger"],
  ["itemGroup", "file-upload__itemGroup"],
  ["item", "file-upload__item"],
  ["itemName", "file-upload__itemName"],
  ["itemSizeText", "file-upload__itemSizeText"]
], _ = /* @__PURE__ */ f.map(([e, a]) => [
  e,
  n(
    a,
    r,
    d(g, e)
  )
]), U = p((e = {}) => Object.fromEntries(
  _.map(([a, l]) => [a, l.recipeFn(e)])
)), i = [], u = (e) => ({ ...r, ...s(e) }), F = /* @__PURE__ */ Object.assign(U, {
  __recipe__: !1,
  __name__: "fileUpload",
  raw: (e) => e,
  classNameMap: {},
  variantKeys: i,
  variantMap: {},
  splitVariantProps(e) {
    return m(e, i);
  },
  getVariantProps: u
}), { withRootProvider: I, withContext: o } = c(F), z = I(t.Root), T = o(t.Dropzone, "dropzone"), S = o(t.Trigger, "trigger"), x = o(t.ItemGroup, "itemGroup"), D = o(t.Item, "item"), N = o(t.ItemName, "itemName"), G = o(t.ItemSizeText, "itemSizeText"), V = o(t.ItemDeleteTrigger, "trigger"), b = {
  Root: z,
  Dropzone: T,
  Trigger: S,
  ItemGroup: x,
  Item: D,
  ItemName: N,
  ItemSizeText: G,
  ItemDeleteTrigger: V
};
export {
  b as F,
  z as a,
  T as b,
  S as c,
  x as d,
  D as e,
  N as f,
  G as g,
  V as h
};
//# sourceMappingURL=fileUpload-DN6riL7j.mjs.map
