import { jsxs as h, jsx as r } from "react/jsx-runtime";
import { Switch as s } from "@ark-ui/react";
import { forwardRef as w } from "react";
import { m as d, a as V, s as f, b as u } from "./create-recipe-D2XybSAv.mjs";
const e = /* @__PURE__ */ V("switch", {
  size: "md"
}, []), n = {
  size: [
    "sm",
    "md",
    "lg"
  ]
}, i = Object.keys(n), o = /* @__PURE__ */ Object.assign(d(e.recipeFn), {
  __recipe__: !0,
  __name__: "switchToggle",
  __getCompoundVariantCss__: e.__getCompoundVariantCss__,
  raw: (t) => t,
  variantKeys: i,
  variantMap: n,
  merge(t) {
    return u(this, t);
  },
  splitVariantProps(t) {
    return f(t, i);
  },
  getVariantProps: e.getVariantProps
}), P = w(
  ({ label: t, size: c, children: a, className: p, ...m }, g) => {
    const [_, l] = o.splitVariantProps({ size: c });
    return /* @__PURE__ */ h(
      s.Root,
      {
        ref: g,
        className: [o(_), p].filter(Boolean).join(" "),
        ...l,
        ...m,
        children: [
          /* @__PURE__ */ r(s.Control, { children: /* @__PURE__ */ r(s.Thumb, {}) }),
          (t || a) && /* @__PURE__ */ r(s.Label, { children: t || a })
        ]
      }
    );
  }
);
P.displayName = "Switch";
export {
  P as S
};
//# sourceMappingURL=switch-CzdXplli.mjs.map
