import { jsxs as x, jsx as o } from "react/jsx-runtime";
import { Checkbox as r } from "@ark-ui/react";
import { forwardRef as k } from "react";
import { m as l, a as d, s as C, b as g } from "./create-recipe-D2XybSAv.mjs";
const s = /* @__PURE__ */ d("checkbox", {
  size: "md"
}, []), i = {
  size: [
    "sm",
    "md",
    "lg"
  ]
}, t = Object.keys(i), c = /* @__PURE__ */ Object.assign(l(s.recipeFn), {
  __recipe__: !0,
  __name__: "checkbox",
  __getCompoundVariantCss__: s.__getCompoundVariantCss__,
  raw: (e) => e,
  variantKeys: t,
  variantMap: i,
  merge(e) {
    return g(this, e);
  },
  splitVariantProps(e) {
    return C(e, t);
  },
  getVariantProps: s.getVariantProps
}), V = k(
  ({ label: e, size: n, children: a, className: p, ...m }, _) => {
    const [h, b] = c.splitVariantProps({ size: n });
    return /* @__PURE__ */ x(
      r.Root,
      {
        ref: _,
        className: [c(h), p].filter(Boolean).join(" "),
        ...b,
        ...m,
        children: [
          /* @__PURE__ */ o(r.Control, { children: /* @__PURE__ */ o(r.Indicator, { children: "âœ“" }) }),
          (e || a) && /* @__PURE__ */ o(r.Label, { children: e || a })
        ]
      }
    );
  }
);
V.displayName = "Checkbox";
export {
  V as C
};
//# sourceMappingURL=checkbox-DQzY85O2.mjs.map
