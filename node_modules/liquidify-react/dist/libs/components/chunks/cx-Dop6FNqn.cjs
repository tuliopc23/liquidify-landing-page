"use strict";function k(t){return typeof t=="object"&&t!=null&&!Array.isArray(t)}const q=t=>typeof t=="object"&&t!==null;function v(t){return Object.fromEntries(Object.entries(t??{}).filter(([r,o])=>o!==void 0))}const G=t=>t==="base";function K(t){return t.slice().filter(r=>!G(r))}function B(t){return String.fromCharCode(t+(t>25?39:97))}function $(t){let r="",o;for(o=Math.abs(t);o>52;o=o/52|0)r=B(o%52)+r;return B(o%52)+r}function Z(t,r){let o=r.length;for(;o;)t=t*33^r.charCodeAt(--o);return t}function U(t){return $(Z(5381,t)>>>0)}const j=/\s*!(important)?/i;function J(t){return typeof t=="string"?j.test(t):!1}function Q(t){return typeof t=="string"?t.replace(j,"").trim():t}function x(t){return typeof t=="string"?t.replaceAll(" ","_"):t}const h=t=>{const r=new Map;return(...n)=>{const e=JSON.stringify(n);if(r.has(e))return r.get(e);const i=t(...n);return r.set(e,i),i}},tt=new Set(["__proto__","constructor","prototype"]);function C(...t){return t.reduce((r,o)=>(o&&Object.keys(o).forEach(n=>{if(tt.has(n))return;const e=r[n],i=o[n];k(e)&&k(i)?r[n]=C(e,i):r[n]=i}),r),{})}const rt=t=>t!=null;function P(t,r,o={}){const{stop:n,getKey:e}=o;function i(s,a=[]){if(q(s)){const c={};for(const[d,p]of Object.entries(s)){const g=e?.(d,p)??d,l=[...a,g];if(n?.(s,l))return r(s,a);const b=i(p,l);rt(b)&&(c[g]=b)}return c}return r(s,a)}return i(t)}function ot(t,r){return t.reduce((o,n,e)=>{const i=r[e];return n!=null&&(o[i]=n),o},{})}function I(t,r,o=!0){const{utility:n,conditions:e}=r,{hasShorthand:i,resolveShorthand:s}=n;return P(t,a=>Array.isArray(a)?ot(a,e.breakpoints.keys):a,{stop:a=>Array.isArray(a),getKey:o?a=>i?s(a):a:void 0})}const nt={shift:t=>t,finalize:t=>t,breakpoints:{keys:[]}},et=t=>typeof t=="string"?t.replaceAll(/[\n\s]+/g," "):t;function T(t){const{utility:r,hash:o,conditions:n=nt}=t,e=s=>[r.prefix,s].filter(Boolean).join("-"),i=(s,a)=>{let c;if(o){const d=[...n.finalize(s),a];c=e(r.toHash(d,U))}else c=[...n.finalize(s),e(a)].join(":");return c};return h(({base:s,...a}={})=>{const c=Object.assign(a,s),d=I(c,t),p=new Set;return P(d,(g,l)=>{if(g==null)return;const b=J(g),[u,...m]=n.shift(l),S=K(m),_=r.transform(u,Q(et(g)));let y=i(S,_.className);b&&(y=`${y}!`),p.add(y)}),Array.from(p).join(" ")})}function it(...t){return t.flat().filter(r=>k(r)&&Object.keys(v(r)).length>0)}function st(t){function r(e){const i=it(...e);return i.length===1?i:i.map(s=>I(s,t))}function o(...e){return C(...r(e))}function n(...e){return Object.assign({},...r(e))}return{mergeCss:h(o),assignCss:n}}const at=/([A-Z])/g,ct=/^ms-/,dt=h(t=>t.startsWith("--")?t:t.replace(at,"-$1").replace(ct,"-ms-").toLowerCase()),lt="cm,mm,Q,in,pc,pt,px,em,ex,ch,rem,lh,rlh,vw,vh,vmin,vmax,vb,vi,svw,svh,lvw,lvh,dvw,dvh,cqw,cqh,cqi,cqb,cqmin,cqmax,%";`${lt.split(",").join("|")}`;const bt=(t={})=>{const r=e=>({className:[t.className,e].filter(Boolean).join("__"),base:t.base?.[e]??{},variants:{},defaultVariants:t.defaultVariants??{},compoundVariants:t.compoundVariants?gt(t.compoundVariants,e):[]}),n=(t.slots??[]).map(e=>[e,r(e)]);for(const[e,i]of Object.entries(t.variants??{}))for(const[s,a]of Object.entries(i))n.forEach(([c,d])=>{d.variants[e]??={},d.variants[e][s]=a[c]??{}});return Object.fromEntries(n)},gt=(t,r)=>t.filter(o=>o.css[r]).map(o=>({...o,css:o.css[r]}));function A(t,...r){const o=Object.getOwnPropertyDescriptors(t),n=Object.keys(o),e=s=>{const a={};for(let c=0;c<s.length;c++){const d=s[c];o[d]&&(Object.defineProperty(a,d,o[d]),delete o[d])}return a},i=s=>e(Array.isArray(s)?s:n.filter(s));return r.map(i).concat(e(n))}const M=(...t)=>{const r=t.reduce((o,n)=>(n&&n.forEach(e=>o.add(e)),o),new Set([]));return Array.from(r)},V=["htmlSize","htmlTranslate","htmlWidth","htmlHeight"];function pt(t){return V.includes(t)?t.replace("html","").toLowerCase():t}function z(t){return Object.fromEntries(Object.entries(t).map(([r,o])=>[pt(r),o]))}z.keys=V;const ut="_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_complete,_incomplete,_dragging,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_grabbed,_underValue,_overValue,_atValue,_default,_optional,_open,_closed,_fullscreen,_loading,_hidden,_current,_currentPage,_currentStep,_today,_unavailable,_rangeStart,_rangeEnd,_now,_topmost,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_icon,_starting,_noscript,_invertedColors,base",W=new Set(ut.split(",")),mt=/^@|&|&$/;function R(t){return W.has(t)||mt.test(t)}const ft=/^_/,ht=/&|@/;function L(t){return t.map(r=>W.has(r)?r.replace(ft,""):ht.test(r)?`[${x(r.trim())}]`:r)}function F(t){return t.sort((r,o)=>{const n=R(r),e=R(o);return n&&!e?1:!n&&e?-1:0})}const St="aspectRatio:asp,boxDecorationBreak:bx-db,zIndex:z,boxSizing:bx-s,objectPosition:obj-p,objectFit:obj-f,overscrollBehavior:ovs-b,overscrollBehaviorX:ovs-bx,overscrollBehaviorY:ovs-by,position:pos/1,top:top,left:left,inset:inset,insetInline:inset-x/insetX,insetBlock:inset-y/insetY,insetBlockEnd:inset-be,insetBlockStart:inset-bs,insetInlineEnd:inset-e/insetEnd/end,insetInlineStart:inset-s/insetStart/start,right:right,bottom:bottom,float:float,visibility:vis,display:d,hideFrom:hide,hideBelow:show,flexBasis:flex-b,flex:flex,flexDirection:flex-d/flexDir,flexGrow:flex-g,flexShrink:flex-sh,gridTemplateColumns:grid-tc,gridTemplateRows:grid-tr,gridColumn:grid-c,gridRow:grid-r,gridColumnStart:grid-cs,gridColumnEnd:grid-ce,gridAutoFlow:grid-af,gridAutoColumns:grid-ac,gridAutoRows:grid-ar,gap:gap,gridGap:grid-g,gridRowGap:grid-rg,gridColumnGap:grid-cg,rowGap:rg,columnGap:cg,justifyContent:jc,alignContent:ac,alignItems:ai,alignSelf:as,padding:p/1,paddingLeft:pl/1,paddingRight:pr/1,paddingTop:pt/1,paddingBottom:pb/1,paddingBlock:py/1/paddingY,paddingBlockEnd:pbe,paddingBlockStart:pbs,paddingInline:px/paddingX/1,paddingInlineEnd:pe/1/paddingEnd,paddingInlineStart:ps/1/paddingStart,marginLeft:ml/1,marginRight:mr/1,marginTop:mt/1,marginBottom:mb/1,margin:m/1,marginBlock:my/1/marginY,marginBlockEnd:mbe,marginBlockStart:mbs,marginInline:mx/1/marginX,marginInlineEnd:me/1/marginEnd,marginInlineStart:ms/1/marginStart,spaceX:sx,spaceY:sy,outlineWidth:ring-w/ringWidth,outlineColor:ring-c/ringColor,outline:ring/1,outlineOffset:ring-o/ringOffset,focusRing:focus-ring,focusVisibleRing:focus-v-ring,focusRingColor:focus-ring-c,focusRingOffset:focus-ring-o,focusRingWidth:focus-ring-w,focusRingStyle:focus-ring-s,divideX:dvd-x,divideY:dvd-y,divideColor:dvd-c,divideStyle:dvd-s,width:w/1,inlineSize:w-is,minWidth:min-w/minW,minInlineSize:min-w-is,maxWidth:max-w/maxW,maxInlineSize:max-w-is,height:h/1,blockSize:h-bs,minHeight:min-h/minH,minBlockSize:min-h-bs,maxHeight:max-h/maxH,maxBlockSize:max-b,boxSize:size,color:c,fontFamily:ff,fontSize:fs,fontSizeAdjust:fs-a,fontPalette:fp,fontKerning:fk,fontFeatureSettings:ff-s,fontWeight:fw,fontSmoothing:fsmt,fontVariant:fv,fontVariantAlternates:fv-alt,fontVariantCaps:fv-caps,fontVariationSettings:fv-s,fontVariantNumeric:fv-num,letterSpacing:ls,lineHeight:lh,textAlign:ta,textDecoration:td,textDecorationColor:td-c,textEmphasisColor:te-c,textDecorationStyle:td-s,textDecorationThickness:td-t,textUnderlineOffset:tu-o,textTransform:tt,textIndent:ti,textShadow:tsh,textShadowColor:tsh-c/textShadowColor,textOverflow:tov,verticalAlign:va,wordBreak:wb,textWrap:tw,truncate:trunc,lineClamp:lc,listStyleType:li-t,listStylePosition:li-pos,listStyleImage:li-img,listStyle:li-s,backgroundPosition:bg-p/bgPosition,backgroundPositionX:bg-p-x/bgPositionX,backgroundPositionY:bg-p-y/bgPositionY,backgroundAttachment:bg-a/bgAttachment,backgroundClip:bg-cp/bgClip,background:bg/1,backgroundColor:bg-c/bgColor,backgroundOrigin:bg-o/bgOrigin,backgroundImage:bg-i/bgImage,backgroundRepeat:bg-r/bgRepeat,backgroundBlendMode:bg-bm/bgBlendMode,backgroundSize:bg-s/bgSize,backgroundGradient:bg-grad/bgGradient,backgroundLinear:bg-linear/bgLinear,backgroundRadial:bg-radial/bgRadial,backgroundConic:bg-conic/bgConic,textGradient:txt-grad,gradientFromPosition:grad-from-pos,gradientToPosition:grad-to-pos,gradientFrom:grad-from,gradientTo:grad-to,gradientVia:grad-via,gradientViaPosition:grad-via-pos,borderRadius:bdr/rounded,borderTopLeftRadius:bdr-tl/roundedTopLeft,borderTopRightRadius:bdr-tr/roundedTopRight,borderBottomRightRadius:bdr-br/roundedBottomRight,borderBottomLeftRadius:bdr-bl/roundedBottomLeft,borderTopRadius:bdr-t/roundedTop,borderRightRadius:bdr-r/roundedRight,borderBottomRadius:bdr-b/roundedBottom,borderLeftRadius:bdr-l/roundedLeft,borderStartStartRadius:bdr-ss/roundedStartStart,borderStartEndRadius:bdr-se/roundedStartEnd,borderStartRadius:bdr-s/roundedStart,borderEndStartRadius:bdr-es/roundedEndStart,borderEndEndRadius:bdr-ee/roundedEndEnd,borderEndRadius:bdr-e/roundedEnd,border:bd,borderWidth:bd-w,borderTopWidth:bd-t-w,borderLeftWidth:bd-l-w,borderRightWidth:bd-r-w,borderBottomWidth:bd-b-w,borderBlockStartWidth:bd-bs-w,borderBlockEndWidth:bd-be-w,borderColor:bd-c,borderInline:bd-x/borderX,borderInlineWidth:bd-x-w/borderXWidth,borderInlineColor:bd-x-c/borderXColor,borderBlock:bd-y/borderY,borderBlockWidth:bd-y-w/borderYWidth,borderBlockColor:bd-y-c/borderYColor,borderLeft:bd-l,borderLeftColor:bd-l-c,borderInlineStart:bd-s/borderStart,borderInlineStartWidth:bd-s-w/borderStartWidth,borderInlineStartColor:bd-s-c/borderStartColor,borderRight:bd-r,borderRightColor:bd-r-c,borderInlineEnd:bd-e/borderEnd,borderInlineEndWidth:bd-e-w/borderEndWidth,borderInlineEndColor:bd-e-c/borderEndColor,borderTop:bd-t,borderTopColor:bd-t-c,borderBottom:bd-b,borderBottomColor:bd-b-c,borderBlockEnd:bd-be,borderBlockEndColor:bd-be-c,borderBlockStart:bd-bs,borderBlockStartColor:bd-bs-c,opacity:op,boxShadow:bx-sh/shadow,boxShadowColor:bx-sh-c/shadowColor,mixBlendMode:mix-bm,filter:filter,brightness:brightness,contrast:contrast,grayscale:grayscale,hueRotate:hue-rotate,invert:invert,saturate:saturate,sepia:sepia,dropShadow:drop-shadow,blur:blur,backdropFilter:bkdp,backdropBlur:bkdp-blur,backdropBrightness:bkdp-brightness,backdropContrast:bkdp-contrast,backdropGrayscale:bkdp-grayscale,backdropHueRotate:bkdp-hue-rotate,backdropInvert:bkdp-invert,backdropOpacity:bkdp-opacity,backdropSaturate:bkdp-saturate,backdropSepia:bkdp-sepia,borderCollapse:bd-cl,borderSpacing:bd-sp,borderSpacingX:bd-sx,borderSpacingY:bd-sy,tableLayout:tbl,transitionTimingFunction:trs-tmf,transitionDelay:trs-dly,transitionDuration:trs-dur,transitionProperty:trs-prop,transition:trs,animation:anim,animationName:anim-n,animationTimingFunction:anim-tmf,animationDuration:anim-dur,animationDelay:anim-dly,animationPlayState:anim-ps,animationComposition:anim-comp,animationFillMode:anim-fm,animationDirection:anim-dir,animationIterationCount:anim-ic,animationRange:anim-r,animationState:anim-s,animationRangeStart:anim-rs,animationRangeEnd:anim-re,animationTimeline:anim-tl,transformOrigin:trf-o,transformBox:trf-b,transformStyle:trf-s,transform:trf,rotate:rotate,rotateX:rotate-x,rotateY:rotate-y,rotateZ:rotate-z,scale:scale,scaleX:scale-x,scaleY:scale-y,translate:translate,translateX:translate-x/x,translateY:translate-y/y,translateZ:translate-z/z,accentColor:ac-c,caretColor:ca-c,scrollBehavior:scr-bhv,scrollbar:scr-bar,scrollbarColor:scr-bar-c,scrollbarGutter:scr-bar-g,scrollbarWidth:scr-bar-w,scrollMargin:scr-m,scrollMarginLeft:scr-ml,scrollMarginRight:scr-mr,scrollMarginTop:scr-mt,scrollMarginBottom:scr-mb,scrollMarginBlock:scr-my/scrollMarginY,scrollMarginBlockEnd:scr-mbe,scrollMarginBlockStart:scr-mbt,scrollMarginInline:scr-mx/scrollMarginX,scrollMarginInlineEnd:scr-me,scrollMarginInlineStart:scr-ms,scrollPadding:scr-p,scrollPaddingBlock:scr-py/scrollPaddingY,scrollPaddingBlockStart:scr-pbs,scrollPaddingBlockEnd:scr-pbe,scrollPaddingInline:scr-px/scrollPaddingX,scrollPaddingInlineEnd:scr-pe,scrollPaddingInlineStart:scr-ps,scrollPaddingLeft:scr-pl,scrollPaddingRight:scr-pr,scrollPaddingTop:scr-pt,scrollPaddingBottom:scr-pb,scrollSnapAlign:scr-sa,scrollSnapStop:scrs-s,scrollSnapType:scrs-t,scrollSnapStrictness:scrs-strt,scrollSnapMargin:scrs-m,scrollSnapMarginTop:scrs-mt,scrollSnapMarginBottom:scrs-mb,scrollSnapMarginLeft:scrs-ml,scrollSnapMarginRight:scrs-mr,scrollSnapCoordinate:scrs-c,scrollSnapDestination:scrs-d,scrollSnapPointsX:scrs-px,scrollSnapPointsY:scrs-py,scrollSnapTypeX:scrs-tx,scrollSnapTypeY:scrs-ty,scrollTimeline:scrtl,scrollTimelineAxis:scrtl-a,scrollTimelineName:scrtl-n,touchAction:tch-a,userSelect:us,overflow:ov,overflowWrap:ov-wrap,overflowX:ov-x,overflowY:ov-y,overflowAnchor:ov-a,overflowBlock:ov-b,overflowInline:ov-i,overflowClipBox:ovcp-bx,overflowClipMargin:ovcp-m,overscrollBehaviorBlock:ovs-bb,overscrollBehaviorInline:ovs-bi,fill:fill,stroke:stk,strokeWidth:stk-w,strokeDasharray:stk-dsh,strokeDashoffset:stk-do,strokeLinecap:stk-lc,strokeLinejoin:stk-lj,strokeMiterlimit:stk-ml,strokeOpacity:stk-op,srOnly:sr,debug:debug,appearance:ap,backfaceVisibility:bfv,clipPath:cp-path,hyphens:hy,mask:msk,maskImage:msk-i,maskSize:msk-s,textSizeAdjust:txt-adj,container:cq,containerName:cq-n,containerType:cq-t,cursor:cursor",X=new Map,Y=new Map;St.split(",").forEach(t=>{const[r,o]=t.split(":"),[n,...e]=o.split("/");X.set(r,n),e.length&&e.forEach(i=>{Y.set(i==="1"?n:i,r)})});const E=t=>Y.get(t)||t,D={conditions:{shift:F,finalize:L,breakpoints:{keys:["base"]}},utility:{transform:(t,r)=>{const o=E(t);return{className:`${X.get(o)||dt(o)}_${x(r)}`}},hasShorthand:!0,toHash:(t,r)=>r(t.join(":")),resolveShorthand:E}},_t=T(D),w=(...t)=>_t(f(...t));w.raw=(...t)=>f(...t);const{mergeCss:f}=st(D),O=t=>({base:{},variants:{},defaultVariants:{},compoundVariants:[],...t});function N(t){const{base:r,variants:o,defaultVariants:n,compoundVariants:e}=O(t),i=l=>({...n,...v(l)});function s(l={}){const b=i(l);let u={...r};for(const[S,_]of Object.entries(b))o[S]?.[_]&&(u=f(u,o[S][_]));const m=H(e,b);return f(u,m)}function a(l){const b=O(l.config),u=M(l.variantKeys,Object.keys(o));return N({base:f(r,b.base),variants:Object.fromEntries(u.map(m=>[m,f(o[m],b.variants[m])])),defaultVariants:C(n,b.defaultVariants),compoundVariants:[...e,...b.compoundVariants]})}function c(l){return w(s(l))}const d=Object.keys(o);function p(l){return A(l,d)}const g=Object.fromEntries(Object.entries(o).map(([l,b])=>[l,Object.keys(b)]));return Object.assign(h(c),{__cva__:!0,variantMap:g,variantKeys:d,raw:s,config:t,merge:a,splitVariantProps:p,getVariantProps:i})}function H(t,r){let o={};return t.forEach(n=>{Object.entries(n).every(([i,s])=>i==="css"?!0:(Array.isArray(s)?s:[s]).some(c=>r[i]===c))&&(o=f(o,n.css))}),o}function yt(t,r,o,n){if(r.length>0&&typeof o?.[n]=="object")throw new Error(`[recipe:${t}:${n}] Conditions are not supported when using compound variants.`)}function kt(){let t="",r=0,o;for(;r<arguments.length;)(o=arguments[r++])&&typeof o=="string"&&(t&&(t+=" "),t+=o);return t}exports.assertCompoundVariant=yt;exports.compact=v;exports.createCss=T;exports.css=w;exports.cva=N;exports.cx=kt;exports.finalizeConditions=L;exports.getCompoundVariantCss=H;exports.getSlotRecipes=bt;exports.memo=h;exports.normalizeHTMLProps=z;exports.sortConditions=F;exports.splitProps=A;exports.uniq=M;exports.withoutSpace=x;
//# sourceMappingURL=cx-Dop6FNqn.cjs.map
