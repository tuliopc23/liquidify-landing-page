import { Tooltip as ArkTooltip } from "@ark-ui/react";
export declare const TooltipRoot: import("styled-system/jsx/create-style-context").StyleContextProvider<(props: ArkTooltip.RootProps) => import("react/jsx-runtime").JSX.Element, import("styled-system/recipes").TooltipRecipe>;
export declare const TooltipContent: import("styled-system/jsx/create-style-context").StyleContextConsumer<import("react").ForwardRefExoticComponent<ArkTooltip.ContentProps & import("react").RefAttributes<HTMLDivElement>>>;
export declare const TooltipPositioner: import("styled-system/jsx/create-style-context").StyleContextConsumer<import("react").ForwardRefExoticComponent<ArkTooltip.PositionerProps & import("react").RefAttributes<HTMLDivElement>>>;
export declare const TooltipTrigger: import("styled-system/jsx/create-style-context").StyleContextConsumer<import("react").ForwardRefExoticComponent<ArkTooltip.TriggerProps & import("react").RefAttributes<HTMLButtonElement>>>;
export declare const Tooltip: {
    Root: import("styled-system/jsx/create-style-context").StyleContextProvider<(props: ArkTooltip.RootProps) => import("react/jsx-runtime").JSX.Element, import("styled-system/recipes").TooltipRecipe>;
    Content: import("styled-system/jsx/create-style-context").StyleContextConsumer<import("react").ForwardRefExoticComponent<ArkTooltip.ContentProps & import("react").RefAttributes<HTMLDivElement>>>;
    Positioner: import("styled-system/jsx/create-style-context").StyleContextConsumer<import("react").ForwardRefExoticComponent<ArkTooltip.PositionerProps & import("react").RefAttributes<HTMLDivElement>>>;
    Trigger: import("styled-system/jsx/create-style-context").StyleContextConsumer<import("react").ForwardRefExoticComponent<ArkTooltip.TriggerProps & import("react").RefAttributes<HTMLButtonElement>>>;
};
//# sourceMappingURL=tooltip.d.ts.map