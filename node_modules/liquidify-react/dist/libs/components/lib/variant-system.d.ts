/**
 * Variant System for LiqUIdify Components
 *
 * Centralized variant management using Panda CSS patterns and tokens
 */
type VariantProps<T> = {
    [K in keyof T]?: T[K] extends Record<string, unknown> ? keyof T[K] : T[K] extends readonly (infer U)[] ? U : never;
};
export type InferVariantProps<T> = VariantProps<T>;
type VariantConfig = Record<string, unknown>;
export declare const createVariants: <T extends VariantConfig>(config: T & {
    base?: string | string[];
    defaults?: Partial<VariantProps<T>>;
}) => (props?: VariantProps<T>) => string;
export {};
//# sourceMappingURL=variant-system.d.ts.map