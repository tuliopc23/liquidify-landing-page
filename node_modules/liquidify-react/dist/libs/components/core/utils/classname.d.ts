/**
 * ClassName utility for combining CSS classes with Panda CSS
 *
 * Provides a robust utility for combining CSS classes using Panda's cx utility
 * with proper handling of conditional classes, arrays, and objects.
 */
import { cx } from "../../../../../styled-system/css";
/**
 * Combines multiple class values into a single string using Panda CSS
 *
 * @param inputs - Array of class values (strings, objects, arrays)
 * @returns Combined class string
 *
 * @example
 * cn('base-class', 'additional-class')
 */
export declare function cn(...inputs: Parameters<typeof cx>): string;
/**
 * Surface effect class utilities using pre-generated Panda CSS classes
 * Provides liquid glass surface classes for consistent styling
 */
export declare const SURFACE_CLASSES: {
    readonly default: "glass-surface";
    readonly elevated: "glass-surface liquid-flow";
    readonly floating: "glass-surface liquid-wobble-active";
    readonly overlay: "glass-surface";
    readonly hover: "liquid-flow";
    readonly active: "liquid-pressed";
    readonly pressed: "liquid-pressed";
    readonly interactive: "liquid-flow";
    readonly disabled: "";
};
/**
 * Get surface effect classes using liquid glass styling
 *
 * @param variant - The surface variant to apply
 * @returns The corresponding surface classes
 */
export declare function getSurfaceClass(variant?: keyof typeof SURFACE_CLASSES): string;
/**
 * @deprecated Use getSurfaceClass instead
 */
export declare function getGlassClass(variant?: keyof typeof SURFACE_CLASSES): string;
/**
 * Focus ring utility for accessibility using Panda CSS tokens
 * Provides consistent focus ring styling across components
 */
export declare function focusRing(visible?: boolean): string;
/**
 * Micro-interaction utility using liquid glass animations
 * Provides subtle interaction feedback
 */
declare function createMicroInteraction(type?: "hover" | "active" | "focus"): string;
export declare const microInteraction: typeof createMicroInteraction & {
    gentle: string;
    interactive: string;
    smooth: string;
};
export {};
//# sourceMappingURL=classname.d.ts.map