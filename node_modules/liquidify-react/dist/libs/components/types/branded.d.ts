/**
 * Branded Types for Glass UI
 * Provides compile-time type safety for specific value types
 */
declare const brand: unique symbol;
type Brand<T, TBrand> = T & {
    [brand]: TBrand;
};
/**
 * Component Size - Type-safe component sizes
 * @example
 * const size: ComponentSize = createComponentSize('md');
 * const invalid: ComponentSize = createComponentSize('huge'); // Throws error
 */
export type ComponentSize = Brand<string, "ComponentSize">;
export declare const createComponentSize: (size: string) => ComponentSize;
export {};
//# sourceMappingURL=branded.d.ts.map